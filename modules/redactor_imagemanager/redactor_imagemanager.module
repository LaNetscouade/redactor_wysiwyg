<?php


/**
 * Implements hook_menu().
 */
function redactor_imagemanager_menu() {
  $items['redactor/imagemanager/%wysiwyg_profile/upload'] = array(
    'title' => 'Redactor image upload',
    'description' => 'Ajax callback to upload image from Redactor editor',
    'page callback' => 'redactor_imagemanager_upload',
    'page arguments' => array(2),
    'access callback' => 'redactor_imagemanager_access_callback',
    'access arguments' => array(2, 'redactor upload images'),
    'type' => MENU_CALLBACK,
  );

  $items['redactor/imagemanager/%wysiwyg_profile/images.json'] = array(
    'title' => 'Redactor image list',
    'description' => 'Ajax callback to list image from Redactor editor',
    'page callback' => 'redactor_imagemanager_list',
    'page arguments' => array(2),
    'access callback' => 'redactor_imagemanager_access_callback',
    'access arguments' => array(2, 'redactor list images'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function redactor_imagemanager_access_callback($wysiwyg_profile, $permission) {
  $format = filter_format_load($wysiwyg_profile->format);
  return user_access($permission) && filter_access($format);
}

/**
 * Implements hook_permission().
 */
function redactor_imagemanager_permission() {
  return array(
    'redactor upload images' => array(
      'title' => t('Upload images'),
      'description' => t('Allows the user to upload images with the Redactor editor'),
    ),
    'redactor list images' => array(
      'title' => t('List images'),
      'description' => t('Allows the user to list images with the Redactor editor'),
    ),
  );
}

/**
 * Callback to upload images
 */
function redactor_imagemanager_upload($wysiwyg_profile) {

  $config = redactor_get_plugin_config('imagemanager', $wysiwyg_profile);

  if (getimagesize($_FILES['file']['tmp_name'])) {
   $file = file_unmanaged_copy($_FILES['file']['tmp_name'], $config['upload_dir'] . $_FILES['file']['name']);
   $file = file_create_url($file);

   drupal_json_output(array(
     'filelink' => $file
   ));

  } else {
    print t('Not a valid image');
  }
}

/**
 * get image information for redactor imagemager plugins form $file
 * @see http://imperavi.com/redactor/plugins/image-manager
 * @param $file image file
 * @return array image informations
 *   array(
 *     'thumb' => '1m.jpg',
 *     'image' => '1.jpg',
 *     'title' => 'Image 1'
 *   )
 */
function redactor_imagemanager_get_image_infos($file) {
    $url = parse_url(file_create_url($file->uri));
    $infos = array(
      'thumb' => image_style_url('thumbnail', $file->uri),
      'url' => $url['path'],
      'id'  => $file->fid,
      'title'  => $file->name,
    );

    drupal_alter('redactor_imagemanager_image_infos', $infos, $file);

    return $infos;
}

/**
 * return json file of public images
 */
function redactor_imagemanager_list($wysiwyg_profile) {
  $files_infos = array();

  $config = redactor_get_plugin_config('imagemanager', $wysiwyg_profile);

  $files = file_scan_directory(
    $config['upload_dir'], '/\.(' . join(drupal_explode_tags($config['extensions']), '|') . ')$/',
    array(
      'recurse' => $config['recursive']
    )
  );

  foreach($files as $file) {
    $files_infos[] = redactor_imagemanager_get_image_infos($file);
  }

  return drupal_json_output($files_infos);
}

/**
 * Implements hook_redactor_plugins.
 */
function redactor_imagemanager_redactor_plugins($editor) {

  return array(
    'imagemanager' => array(
      'name' => 'Image manager',
      'files' => array(
        'js' => array(
          $editor['library path'] . '/plugins/imagemanager.js' => array(),
        ),
      ),
      'config' => array(
        'extensions' => 'jpg, png, gif, jpeg',
        'upload_dir' => 'public://',
        'recursive'  => false,
      ),
    ),
  );
}

function redactor_imagemanager_wysiwyg_editor_settings_alter(&$settings, $context) {
  if($context['editor']['name'] != 'redactor') {
    return;
  }

  if(!in_array('imagemanager', $settings['plugins'])) {
    return;
  }

  $profile = $context['profile'];
  $settings['imageManagerJson'] = url('redactor/imagemanager/'.$profile->format.'/images.json');
  $settings['imageUpload'] = url('redactor/imagemanager/'.$profile->format.'/upload');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function redactor_imagemanager_form_wysiwyg_profile_form_alter(&$form, &$form_state, $profile) {
  if($form_state['wysiwyg']['editor'] == 'redactor') {
    return;
  }

  $form['imagemanager'] = array(
    '#type' => 'fieldset',
    '#title' => t('Image manager settings'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#tree' => TRUE,
  );

  $profile = $form_state['wysiwyg_profile'];

  $profile = (array) $profile;

  if(empty($profile['settings']['imagemanager'])) {
    $profile['settings']['imagemanager'] = array();
  }

  $profile['settings']['imagemanager'] += redactor_get_plugin_config('imagemanager');
  $profile = (object) $profile;

  $form['imagemanager']['extensions'] = array(
    '#type' => 'textfield',
    '#title' => 'Allowed file extensions',
    '#size' => 40,
    '#maxlength' => 250,
    '#default_value' => !empty($profile->settings['imagemanager']['extensions']) ? $profile->settings['imagemanager']['extensions'] : NULL,
    '#description' => 'comma seprated extensions',
  );

  $form['imagemanager']['upload_dir'] = array(
    '#type' => 'textfield',
    '#title' => 'Image directory',
    '#size' => 40,
    '#maxlength' => 250,
    '#default_value' => !empty($profile->settings['imagemanager']['upload_dir']) ? $profile->settings['imagemanager']['upload_dir'] : NULL,
    '#description' => 'directory where image will be uploaded'
  );

  $form['imagemanager']['recursive'] = array(
    '#type' => 'checkbox',
    '#title' => 'Recursive image directory',
    '#default_value' => !empty($profile->settings['imagemanager']['recursive']) ? $profile->settings['imagemanager']['recursive'] : FALSE,
    '#description' => 'Scan directory recursively'
  );
}

